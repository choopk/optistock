// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}

model User {
  id           String         @id @default(cuid())
  name         String?
  email        String?        @unique
  role         Role           @default(USER)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
}

model Item {
  id           Int            @id @default(autoincrement())
  name         String
  sku          String         @unique
  description  String?
  quantity     Int
  threshold    Int?
  image        String?
  categories   Category[]     @relation("CategoryToItem")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
}

model Category {
  id        String   @id @default(cuid())
  name      String
  items     Item[]   @relation("CategoryToItem")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id         Int              @id @default(autoincrement())
  userId     String
  user       User             @relation(fields: [userId], references: [id])
  itemId     Int?
  item       Item?            @relation(fields: [itemId], references: [id])
  title      String
  message    String
  type       NotificationType
  readStatus Boolean          @default(false)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum NotificationType {
  LOW_STOCK
  SCHEDULED_ORDER
  LATE_PAYMENT
}
